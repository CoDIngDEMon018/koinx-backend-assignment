# docker-compose.yml
version: '3.8'

services:
  # Existing application services
  api-server:
    image: your-api-image:latest
    networks:
      - crypto-net
    environment:
      - PROMETHEUS_METRICS_PORT=3000
    ports:
      - "3000:3000"
  
  worker-server:
    image: your-worker-image:latest
    networks:
      - crypto-net
    depends_on:
      - redis
      - nats

  # Monitoring stack
  prometheus:
    image: prom/prometheus:v2.47.2
    user: "1000:1000"
    volumes:
      - ./infrastructure/prometheus:/etc/prometheus
      - prom_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - crypto-net
    environment:
      - PROMETHEUS_RETENTION=15d
      - PROMETHEUS_MEMORY_CHUNKS=500000
    healthcheck:
      test: ["CMD-SHELL", "wget --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:10.1.5
    user: "1000:1000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/prometheus/dashboards:/etc/grafana/provisioning/dashboards
      - ./infrastructure/prometheus/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    ports:
      - "3001:3000"
    networks:
      - crypto-net
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  alertmanager:
    image: prom/alertmanager:v0.26.0
    volumes:
      - ./infrastructure/prometheus/alertmanager:/etc/alertmanager
    networks:
      - crypto-net
    ports:
      - "9093:9093"
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    healthcheck:
      test: ["CMD-SHELL", "wget --spider http://localhost:9093/-/healthy || exit 1"]

  node-exporter:
    image: prom/node-exporter:v1.7.0
    networks:
      - crypto-net
    ports:
      - "9100:9100"
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'

  # Dependencies
  redis:
    image: redis:7.2-alpine
    networks:
      - crypto-net
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  mongodb:
    image: mongo:7.0
    networks:
      - crypto-net
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]

  nats:
    image: nats:2.10
    networks:
      - crypto-net
    ports:
      - "4222:4222"
      - "8222:8222"  # Monitoring port
    healthcheck:
      test: ["CMD", "nats-server", "-v"]

volumes:
  prom_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./infrastructure/prometheus/data
  grafana_data:
  redis_data:
  mongo_data:

networks:
  crypto-net:
    driver: bridge
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16